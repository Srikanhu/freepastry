README of Tester Application
----------------------------

WARNINGS: A few warning beforehand, please use the entire tarball include the freepastry.params, there has been some amount of additions to the params file as well. 


1. All the important code is in rice.p2p.libra.MyPastryTestClient which is instantiated in rice.p2p.libra.LibraTest



2. The tester framework does two things : 

  a) Every QUERYTHREADPERIOD (set to 1000 ms), it sends a msg (RequestRootHandleMsg) to the root of a random key which responds by sending an ack (RootHandleAckMsg) directly back to the requestor. The Log at the requestor prints "ANYCASTING" and "ANYCASTACK" cooresponding to the operations of sending and receving the corresponding msgs. The goal of this framework is to make sure that all the operation time between sending and getting back the ack is less than 1-2 sec. We currently observe 10% of cases with more than 30 sec. 
  

  b) In addition to this, every node sends a Java UDP msg to every other overlay node in a round robin fashion every UDPQUERYTHREADPERIOD ( set to 500 ms). Thi is to track the underlying response times/losses at the UDP layer. If you want to disable this just comment out the line ' startUDPQueryTask(); ' in MyPastryTestClient.



   There are a few parameters which are of interest. There  are a set of ports I used to interface with the ESM etc etc. 
    public static int PORT = 11111;
    public static int BOOTSTRAP_PORT = 11111;
    public static int SCRIBESERVERPORT = 11110;  
    public static int UDPSOCKETPORT = 11109;
    public static int DUMMYESMSERVERPORT = 11108;


   You dont need to change anything here just run it as it is it should work. The way another person runs the same piece of code using another set of ports is running with the ' -portShift n ' operation which shifts these port sets by n. You dont worry about this. You run this as default, I will run it with different portshift parameters. It always works on 90% of the nodes

    Additionally the code is hardcode to use ricepl-2.cs.rice.edu as bootstrap




3. Additionally pscp the set of nodes calling them 'MonitorNodes.nds' to the home directory of your slice. This files tells the application which nodes to send the round-robbin-Java-UDP msgs. If you want to disable the sending of Java UDP msgs. You can rename the same file you use to start the application using pssh/pscp.




4. Also in LibraTest the defailt is using my own serializing code using the 'OWNSERIALIZER = true'. You can change it to false if you want. Also the default is set to print only libra level output. You can comment/uncomment as desired.

   //env.getParameters().setInt("loglevel", Logger.ALL);
   env.getParameters().setInt("loglevel", PRINTLIBRA_LEVEL);  // PRINTLIBRA_LEVEL = 850;




5. The tester application can be run with hard coded bootstrap as ricepl-2.cs.rice.edu as :


pssh -Pvh CoDeeNNodes.nds -t 60 -l rice_libra "(j2re1.4.2_06/bin/java -Xmx128M -cp pastry.jar rice.p2p.libra.LibraTest -portShift 2000 -useUDP 0 -test 3 -logLevel 850 -run 187 &)" >  launch.log 2>&1




   The output is written to a file 'Log_ricepl-2.cs.rice.edu_1_1127188102921 ', where 1 is the run paramter and the last part is the system time





