
Getting a big set of planetlab nodes : ~jstewart/open/monitor/np.nds
-----------------------------------

Machines : hiross


Printing at MPI
---------------


lpr -PHghp81501


Fixes to ESM
------------


0. Update the session time every 5 seconds



Targets for Telecon on Jan 17
-----------------------------

0. Can we run the amd64 java , but for that we need to have the corresponding libipaddr.so

0. Implement a distributed bootstrap

0. Check the anycast response time of anycasts in the odin cluster

1. Graph of sustained throughput with increasing utilization by implementing downward propagation

2. Graph of throughput vs access link bandwidth

3. Graph of locality/anycasthops/nodestress with utilization

4. Graph of dynamic churn in control plane

5. Compare these plots with centralized solution

6. Check why the #SocketChannelReader/Writer created is exceeding the desired bounds. Consider implementing a distributed bootstrap on Modelnet

7. Check the GNP Coordinates accuracy

8. The proximity does not seem to be working fine - Remeber to enable/disable the ESMScribePolicy.GNP


Warnings
--------

0. The esmContent.negligibleChange is set to false to check why prototype is not working

0. The libralogger.pl script does not have a unique GID when multiple JVMs are running on the same machine

0. Check if the local traffic to UDPLibraServer goes through the Modelnet core. Moreoever we are using DEFAULT instaead of 127.0.0.1

1. The Scribe maintenance interal is being chnaged from 30 seconds to 5 seconds in Splistream so that recovery is triggered faster. Also to dampen the unnecessary maintannce, we use the publish method as a keep-alive from parent.- Check to see the printstatements of the form "Sending subscribe message from maintenanceRoutine have disappeared or not"

2. The max number of sockets is increased to 4096. ulimit is not working from within perl. Also need to check in FreePastry where this limit forces an exception and do a System.exit(1).


Important Chganges
----------------

0. Put a periodic check to see whois the root-key(0000). This should be LibraTest.bootstrap node. In LibraTest.java configure the bootstrap node to have this Id

0. In the TopicManager.addChild() method what happens if addChild() is called but the added NodeHandle.isAlive() fails, in this case the child is actually not added. Does this affect functionality.


a) Group sizes varying more than necessary
b) Why do anycast requests take greater than 5 hops
c) resToData plot is bad, why
d) first call ivokeUpdate() and then anycast()

0. GNP : The connections to rice and the 5th node timeout

0. Aditya: We should first call the invokeUpdate() and then call anycast(), when we make an anycast when we see high loss. How could it be added to the anycastMsg.ToVisit list is this node was already visited

0. Check to see that all metadata is removed when the experiment ends

0. Check to see if we get ESM_AGGREGATE_ERROR

0. Check to see why the aggregate flag is set when the total descendants is 1, is this really a case where the tree is a thin line. 

1. Making the application Thread-safe from UDPLibraServer - done

  a). Method called my UDPLibraServer that need to be thread safe

        esmClient.recvUDPQuery(msg);	
        esmClient.recvUDPAck(msg);	
	esmClient.invokeRegister(mystreamId, esmOverlayId, esmServerPort, esmDatapathPort, esmRunId);	
        esmClient.invokeDummyRegister(dummyesmOverlayId,dummyesmServerPort, dummyesmDatapathPort, dummyesmRunId);	
	esmClient.invokeAnycast(mystreamId, seqNum, pathLengthRequestor, paramsPathRequestor);	
	esmClient.invokeGrpMetadataRequest(mystreamId, seqNum);	
	esmClient.invokeSubscribe(mystreamId);
	esmClient.invokeUnsubscribe(mystreamId);
	esmClient.invokeUpdate(mystreamId,paramsLoad, paramsLoss, time, pathLength, paramsPath);

  b) . Remeber to incorporate Jeff's change to SocketNodeHandle.receiveMessage() So that any other thread doing send() goes thru the selector thread


2. Implement the querying for group resourcces as a message going to the root instead of an anycast. This helps us get rid of the fine-grained Publish messages. - done


3. Implement the coalescing of Publish messages/Update messages



4. FreePastry.params

 a. Set the Pastry routMaintenance (900 sec) & leafsetMaintenance ( 60 sec) in freepastry.params

 b. Change the max sockets to 500, max open source routes to 500

 c. We increased the pastry_socket_buffer from (Default= 128) to 500.


5. Difference between scheduleMsg() and scheduleMsgAtFixedRate() - Done but not tested


Aditya - Lab: 412-268-7560
         Cell : 412-654-1683

         Skype : ganjam01

Peter 
-----  
 
      - Office: (9-011) (49) 681-9325-690
      - Cell: 
      

ESM Webpage : http://madmex.cmcl.cs.cmu.edu:8010/
http://orient.cmcl.cs.cmu.edu:9010/


Profiler License:

  Serial Number : UMNM-87SJF9-96XWN8-W5D
  Authorization key: 3Z5-4RM

    # 13692


SVN Tutorial
-----------

http://svnbook.com/
                                                           
svn log -r "{2005-10-10}:head" -v [file|dir]



Checking out Repository
-----------------------

svn checkout https://svn.mpi-sws.mpg.de/svn/freepastry/trunk/pastry/



Running GNP
-----------

Run MServer at /home/animesh.gnp on amushk.cs.

bash$ ./MServer /home/cs/anycast/FreePastry-1.4.1/pastry-1.4.1/runOnPlanetlab/config.nsdi.planetlab 128.42.6.63



Reporting Pastry bugs
--------------------



Libra notes
-----------

1. Debugging with Eclipse : java -Xdebug -Xrunjdwp:transport=dt_socket;server=y;suspend=n;address=8000


2. Implement the local node also knowing the latest metadata that it propagated to its parent for different topics

3. In removeChild or run a maintenance thread to remove stale entries in updateMetadata in ESMScribePolicy

4. At the Scribe layer parents can change, so implement the logic of refreshUpdate(). Implement the Observable on the parent to trigger immediately

5. In anycastLogger fix the bug of reading multiple files from the same machine


6. We need to implement the fix in Centralized policy where the root is a subscriber


7. We modified the ScribeImpl:: forward() method to return true(let the subscribe continue) when allowSubscribe() returns false, In Splitstream however the code relies on directAnycast() being called to implement fancy policies during the Subscription message 


8. We get the error with Short pings :

WARNING: Received unrecognized message header - ignoring from /129.97.75.238:11111.
ERROR (datagrammanager:read): java.io.IOException: Improper message header received - ignoring from /129.97.75.238:11111. Read -84 -19 0 5
java.io.IOException: Improper message header received - ignoring from /129.97.75.238:11111. Read -84 -19 0 5
        at rice.pastry.socket.PingManager.readHeader(PingManager.java:567)
        at rice.pastry.socket.PingManager.read(PingManager.java:423)
        at rice.selector.SelectorManager.doSelections(SelectorManager.java:385)
        at rice.selector.SelectorManager.run(SelectorManager.java:285)


9. 
ERROR (SelectorManager.run): java.util.ConcurrentModificationException
java.util.ConcurrentModificationException
        at java.util.Hashtable$Enumerator.next(Unknown Source)
        at rice.p2p.scribe.ScribeImpl.update(ScribeImpl.java:1012)
        at rice.pastry.commonapi.PastryEndpoint.leafSetChange(PastryEndpoint.java:396)
        at rice.pastry.client.PastryAppl$LeafSetObserver.update(PastryAppl.java:390)
        at java.util.Observable.notifyObservers(Unknown Source)
        at rice.pastry.leafset.SimilarSet.put(SimilarSet.java:325)
        at rice.pastry.leafset.LeafSet.merge(LeafSet.java:851)
        at rice.pastry.standard.PeriodicLeafSetProtocol.receiveMessage(PeriodicLeafSetProtocol.java:188)
        at rice.pastry.messaging.MessageDispatch.dispatchMessage(MessageDispatch.java:162)        at rice.pastry.PastryNode.receiveMessage(PastryNode.java:410)
        at rice.pastry.socket.SocketCollectionManager$SocketManager.receive(SocketCollectionManager.java:1187)
        at rice.pastry.socket.SocketCollectionManager$SocketManager.read(SocketCollectionManager.java:1091)
        at rice.selector.SelectorManager.doSelections(SelectorManager.java:385)
        at rice.selector.SelectorManager.run(SelectorManager.java:285)






Fixes to Splitsrream to support multiple channels
-------------------------------------------------


1. When someone unsubscribes from a channel, we need to remove the children except if it is a root for a topic



BUGS
-----

1. We get a Concurrent Modification Exception in ScribeImpl.update() in the topics data structure

2. When we force the anycast traversals to more than 0, it visits the local node before and after directAnycast() and thereby increments the numRefused counter twice

3. With our own serialization of Anycast messages, we are not being able to support virtual nodes

Hotnets warnings
----------------

1. Check to see if the Jeff's code in ScribeImpl.update( about the client is commented or not

2. In ESMLIBRA policy, we currently bias towards higher bandwidth nodes to reduce the convergence time, this could lead to higher control traafic node stress

3. When we strain test our system with (groups < NUMTESTGROUPS) and forcing FORCEDTRAVERSALTHRESHOLD, a large size of toVisit NodeHandles might be added to the anycast message increasing the overhead and increasing channel zapping time. - fixed with maximumsatisfied children



6. We have set the ReplayBuffer to be 2K bytes temporarily for debugging purposes, this needs to be incresed to 10K.


8. BUG : There is a bug in   ReplayBuffer where it reads a '-1' written as short as a 65535


9. When we made anycasts at a rate of once every second the system crashed. Debug teh rawoutputs/l_libra-Run77_full to examine the amount of bandwidth and why the queueing happens



12. Fix the ESM RunId bug and timing out of metadata


13. Fix the Scribe maintenance period and the serialization of the maintenance messages. 


14. The refreshUpdate for topic is currently broken in that it does not use the REFRESHPERIOD at all. Introduce te REFRESHPERIOD in the Topicstate to do this

15. ANYCAST MESSAGE overhead - To reduce this overhead further experiment with MAXSATISFIEDCHILDREN (s et to < 5), also get rid of the Visited Linked list


16. Check at the Scribe layer what happens when the Subscribe fails.


17. In splistream, in ESMSplitstreamPolicy, be careful of the bandwidth limits over all channels/per channel in the cases where a node is not a subscriber for a channel but is an intermediate node. Similarly, also enable the intermediate nodes to allow children, even if they are not subscribed

18. Splitstream : Run with the fix of bandwidth cap over all channels, show that as we increase the number of channels the performance degrades. 

19. Add the parent-child isAlive messages, this should enable fast Scribe tree recovery

20. Note : In Stripe.java, correct the logic of subscribefailed, send out a subscribe message only if the parent is null, also, before sending out a subscribe message do we set the parent to null. Currently, the message_timeout is high enough ( 15 secs), that after each subscribe it waits for 15 seconds to make the next attempt.

21. The Scribe Subscribe Failure is now only triggered at the root node, what if the Splistream traversals ends at a non-root node. We did this to implement the Centralized algorithms where the Subscribe message by default goes towards the root if the gestNext() of its Anycast Message is null. In Splistream however it would be good to send the SubscribeFailed message directly from a non-root node

22. In Scribe, also implement the case where the child is no longer present so the parent should be able to remove the child, if the child's unsubscribe message has failed by chance. This is important because in Splistream the child results in a bandwidth reservation

23. (Sep 01) Currently in tracking the length of the Anycast/Subscribe  message traversals, we only count nodes that are already part of the tree, if a node is just an intermediate node in the overlay in its path to a node in tree it is not counted. Also the count is based on teh size of the visited list, which might later be pruned for efficiency.


24 ( Sep 05) The Anycast failed at Root for Topic also happens at a node which is not the root and also when the toVisit.size is actually not 0



25. (Seo09) : Debugging the delayed anycast messages: Animesh,
                                                                                
There are off the shelve UDP/TCP testing programs you can download. E.g.
TTCP.
                                                                                
http://www.caip.rutgers.edu/~arni/linux/tg1.html
                                                                                
I thought the point is to determine whether while you are experiencing
unexpected delays in your pastry overlay, the TTCP stream can flow
normally, therefore identifying whether the problem exists in the Java
code or in the underlying OS or network.
                                                                                
I suggest that you don't implement new stuff unless necessary. Identify a
troublesome Planetlab node that consistently gives you unexpected delays,
then run TTCPs on that node to test it. This should be a quick, easy test
to do.


26. (Sep 10) Jeff's Scribe tree visualization scripts
 
 Animesh,
>   My perl script is in ~jeffh/planetlab/visualizescribetrees.pl
>
> It appears to build a tree based on logs with lines that look like the
> following:
>
>   Stripe [StripeId <0x7ACAF8..>] parent: [SNH: <0x766801..> ->
> <0x7CA8CA..>/planetlab2.ucsd.edu/132.239.17.225:12000
> [4014043983169365297]] numChildren: 16
>   Stripe [StripeId <0x7ACAF8..>] child: [SNH: <0x766801..> ->
> <0xCB404B..>/planetlab1.cs.umd.edu/128.8.126.12:12000
> [-5710925149941921760]]
>
> The way this worked is that I had a message that could be Published
> which would cause everyone to print their parent and children as
> above.  Then in post-processing, this script would build the tree at
> that snapshot.  One approach to get the evolution of the trees over
> time would be to print a sequence number with this publish message,
> then you could modify my script to print the trees at various times.
> However, this of course doesn't work if there is a broken tree, and is
> subject to the lag of the message transfer.
>
> Hope this helps, good luck!  Let me know if I can help.

27. ( Sep 12) : Memeory usage on the planetlab node, memory leaks, reaches 164M on some nodes


28. We put checks for the different types messages to be sent thought UDP in PingManager and SocketCollectionManager


29. Oct 03 :  Currently made booting time as 2.5 minutes in LibraTest so that actual subscription can start after 5 minutes


30. Oct 10: Check why the serialization with the SocketNodeHandles causes even a ReplayBuffer of 5000 bytes to get filled. 



Pastry Profiler
--------------

Default options changed
------------------------


max_queue_length = 128
pastry_socket_scm_socket_buffer_size = 32768




Running Pastry with Profiler option:
-----------------------------------

export CLASSPATH=./pastry.jar:/home/animesh/myplnode_profiler/remoteprofiler/lib/optit.jar:$CLASSPATH

export LD_LIBRARY_PATH=/home/animesh/myplnode_profiler/remoteprofiler/lib/:$LD_LIBRARY_PATH

 

java -Xmx128M -Xrunpri:filter=/home/animesh/myplnode_profiler/remoteprofiler/filters/DefaultAllOn.oif,dmp=1 -Xboundthreads -Xbootclasspath/a:/home/animesh/myplnode_profiler/remoteprofiler/lib/oibcp.jar intuitive.audit.Audit -dmp -startCPUprofiler rice.p2p.libra.LibraTest -portShift 500 -test 3 -tcpOwnSerialized 1 -run 385 -packetsInInterval 25 -bootstrap sys02.cs.rice.edu -centralized sys02.cs.rice.edu -lserverport 10001 -bootstrapport 12111 -centralizedport 12111 -nodes 1 &



java -Xmx256M rice.p2p.libra.LibraTest -portShift 500 -test 3 -tcpOwnSerialized 1 -run 385 -packetsInInterval 25 -bootstrap sys02.cs.rice.edu -centralized sys02.cs.rice.edu -lserverport 10001 -bootstrapport 12111 -centralizedport 12111 -nodes 1 &




1 .Single sender/single receiver

  1000 msg/sec sender

 At receiver: 90.0 % in select()
              4.28 % in read()
              1.5% in write() 
 

 At sender: 



Pastry Msg Handling Stack
-------------------------

  at rice.p2p.libra.MyPastrytestClient.deliver(MyPastrytestClient.java:420)
        at rice.pastry.commonapi.PastryEndpoint.receiveMessage(PastryEndpoint.java:354)
        at rice.pastry.messaging.MessageDispatch.dispatchMessage(MessageDispatch.java:123)
        at rice.pastry.PastryNode.receiveMessage(PastryNode.java:291)
        at rice.pastry.socket.SocketNodeHandle.receiveMessage(SocketNodeHandle.java:121)
        at rice.pastry.standard.StandardRouter.receiveRouteMessage(StandardRouter.java:163)
        at rice.pastry.standard.StandardRouter.receiveMessage(StandardRouter.java:62)
        at rice.pastry.messaging.MessageDispatch.dispatchMessage(MessageDispatch.java:123)
        at rice.pastry.PastryNode.receiveMessage(PastryNode.java:291)
        at rice.pastry.socket.SocketCollectionManager$SocketManager.receive(SocketCollectionManager.java:1003)
        at rice.pastry.socket.SocketCollectionManager$SocketManager.read(SocketCollectionManager.java:910)
        at rice.selector.SelectorManager.doSelections(SelectorManager.java:289)
        at rice.selector.SelectorManager.run(SelectorManager.java:198)



Pastry sending stack
--------------------

     at rice.pastry.socket.SocketChannelWriter.record(SocketChannelWriter.java:191)
        at rice.pastry.socket.SocketChannelWriter.record(SocketChannelWriter.java:163)
        at rice.pastry.socket.SocketChannelWriter.record(SocketChannelWriter.java:160)
        at rice.pastry.socket.SocketChannelWriter.write(SocketChannelWriter.java:242)
        at rice.pastry.socket.SocketCollectionManager$SocketManager.write(SocketCollectionManager.java:935)
        at rice.selector.SelectorManager.doSelections(SelectorManager.java:294)
        at rice.selector.SelectorManager.run(SelectorManager.java:198)



0x791FB0:1131577677271:SysTime: 1131577677271 Node [SNH: <0x791FB0..> -> <0x791FB0..>/sys01.cs.rice.edu/128.42.129.19:11611 [954284620062925472]] ANYCASTING for Hsys01.cs.rice.edu_V0_S2 ] <0x536D69..> TopicName[ 2 ]
0x791FB0:1131577677271:[SocketNodeHandle (<0x791FB0..>/sys01.cs.rice.edu/128.42.129.19:11611 [954284620062925472])] route RequestRootHandleMsg [TOPIC <0x536D69..>] source= [SNH: <0x791FB0..> -> <0x791FB0..>/sys01.cs.rice.edu/128.42.129.19:11611 [954284620062925472]] topicName= Hsys01.cs.rice.edu_V0_S2 to null
0x791FB0:1131577677272:Passing message [ [PEM RequestRootHandleMsg [TOPIC <0x536D69..>] source= [SNH: <0x791FB0..> -> <0x791FB0..>/sys01.cs.rice.edu/128.42.129.19:11611 [954284620062925472]] topicName= Hsys01.cs.rice.edu_V0_S2] ] to the socket controller for writing
0x791FB0:1131577677272:(SCM) Found connection open to path {128.42.129.11:12111} - sending now
0x791FB0:1131577677272:Enqueued message class rice.p2p.libra.RequestRootHandleMsg of size -1 to {128.42.129.11:12111}
0x791FB0:1131577677272:COUNT: Enqueueing message rice.pastry.routing.RouteMessage at location 1 in the pending queue (priority 10)



Java Memory Profiler
--------------------

1. runonPlanetlab/l_trace3 : Using Java serialization. Note that it does not run out of memory. The error bars increase with time. The deviation from 330 msg/sec is greater than than run with own serialization. On the sender side (odin01) there are clear drops in sending side at particular periodic intervals.


Running on Planetlab as of Middleware. Nov 28th
-----------------------------------------------

On Coordgen
-----------

j2re1.4.2_06/bin/java -Xmx128M -cp pastry.jar rice.p2p.libra.LibraTest -portShift 2000 -test 1 -run 26 -numTrees 2 -bootstrap planetlab1.nycm.internet2.planet-lab.org -lserverport 10002 -bootstrapport 13111 &           

pssh -Pvh AnimeshOct16.nds -p 50 -t 60 -l rice_coordgen "(j2re1.4.2_06/bin/java -Xmx128M -cp pastry.jar rice.p2p.libra.LibraTest -portShift 2000 -test 1 -run 26 -numTrees 2 -bootstrap planetlab1.nycm.internet2.planet-lab.org -lserverport 10002 -bootstrapport 13111 &)" >  launch.log 2>&1   

On libra
---------

j2re1.4.2_06/bin/java -Xmx128M -cp pastry.jar rice.p2p.libra.LibraTest -portShift 1000 -test 1 -run 26 -numTrees 2 -bootstrapplanetlab1.nycm.internet2.planet-lab.org -lserverport 10001 -bootstrapport 12111 &              

pssh -Pvh AnimeshOct16.nds -p 50 -t 60 -l rice_libra "(j2re1.4.2_06/bin/java -Xmx128M -cp pastry.jar rice.p2p.libra.LibraTest -portShift 1000 -test 1 -run 26 -numTrees 2 -bootstrap planetlab1.nycm.internet2.planet-lab.org-lserverport 10001 -bootstrapport 12111 &)" >  launch.log 2>&1


On MPI cluster
--------------


pscp -p 50 -t 60 -h MpiNodes.nds -l animesh pastry.jar /local/animesh/myplnode_local >deploy.log

pssh -Pvh MpiNodes.nds -p 50 -t 15 -l animesh "(cd /local/animesh/myplnode_local/;rm Log_*)" >launch.log 2>&1       
pssh -Pvh MpiNodes.nds -p 50 -t 15 -l animesh "(cd /local/animesh/myplnode_local/; java -Xmx128M -cp pastry.jar rice.p2p.libra.LibraTest -portShift 3000 -test 1 -run 26 -numTrees 2 -nametoipcodedfile MpiNameToIpCoded.nds -bootstrap swsao9501.mpi-sws.mpg.de -lserver mpiat2303.ds.mpi-sws.mpg.de -lserverport 10003 -bootstrapport 14111 &)" >  launch.log 2>&1   


pslurp -H -h MpiNodes.nds -p 50 -t 15 -l animesh -L l_odin_Run10 /local/animesh/myplnode_local/l.txt l.txt







Backup versions
---------------


1. Dec4.jar : Everything works, unnecessary logging removed, incremental updates added. Missing features:  a) coalescing of Updates b) Implementation of centralized solution  





Modelnet deployhost operation
-----------------------------
swsao9541# nohup deployhost example.model example.route
/sbin/kldunload modelnet
/sbin/kldunload ipfw
/sbin/route delete -net 10/26
delete net 10
/sbin/route delete -net 10.0.0.64/26
delete net 10.0.0.64
/sbin/route delete -net 10.0.0.128/26
delete net 10.0.0.128
/sbin/route delete -net 10.0.0.192/26
delete net 10.0.0.192
/sbin/route delete -net 10.0.1/26
delete net 10.0.1
/sbin/route delete -net 10.0.1.64/26
delete net 10.0.1.64
/sbin/route delete -net 10.0.1.128/26
delete net 10.0.1.128
/sbin/route delete -net 10.0.1.192/26
delete net 10.0.1.192
/sbin/route delete -net 10.0.2/26
delete net 10.0.2
/sbin/route delete -net 10.0.2.64/26
delete net 10.0.2.64
/sbin/route delete -net 10.0.2.128/26
delete net 10.0.2.128
/sbin/route delete -net 10.0.2.192/26
delete net 10.0.2.192
/sbin/route delete -net 10.0.3/26
delete net 10.0.3
/sbin/route delete -net 10.0.3.64/26
delete net 10.0.3.64
/sbin/route delete -net 10.0.6.128/26
delete net 10.0.6.128
/sbin/route delete -net 10.0.6.192/26
delete net 10.0.6.192
/sbin/route delete -net 10.0.7/26
delete net 10.0.7
/sbin/route delete -net 10.0.7.64/26
delete net 10.0.7.64
/usr/local/bin/ipfwload
Flushed all rules.
65000 allow ip from any to any
/sbin/kldload /usr/local/bin/../lib/modelnet.ko
/sbin/sysctl net.inet.ip.forwarding=1
net.inet.ip.forwarding: 1 -> 1
/usr/local/bin/modelload example.model example.route
loaded 43151 hops
/sbin/ipfw add 100 pipe 1 ip from any to 10.0.0.0/8 in
00100 pipe 1 ip from any to 10.0.0.0/8 in
/sbin/ipfw add 200 pipe 1 udp from any to me 5347
00200 pipe 1 udp from any to me 5347
/sbin/route add 10.0.2.0/26 swsao9509
add net 10.0.2.0: gateway swsao9509
/sbin/route add 10.0.5.192/26 swsao9524
add net 10.0.5.192: gateway swsao9524
/sbin/route add 10.0.2.128/26 swsao9511
add net 10.0.2.128: gateway swsao9511
/sbin/route add 10.0.4.64/26 swsao9518
add net 10.0.4.64: gateway swsao9518
/sbin/route add 10.0.3.192/26 swsao9516
add net 10.0.3.192: gateway swsao9516
/sbin/route add 10.0.6.0/26 swsao9525
add net 10.0.6.0: gateway swsao9525
/sbin/route add 10.0.4.192/26 swsao9520
add net 10.0.4.192: gateway swsao9520
/sbin/route add 10.0.5.64/26 swsao9522
add net 10.0.5.64: gateway swsao9522
/sbin/route add 10.0.0.192/26 swsao9504
add net 10.0.0.192: gateway swsao9504
/sbin/route add 10.0.6.128/26 swsao9527
add net 10.0.6.128: gateway swsao9527
/sbin/route add 10.0.4.0/26 swsao9517
add net 10.0.4.0: gateway swsao9517
/sbin/route add 10.0.0.128/26 swsao9503
add net 10.0.0.128: gateway swsao9503
/sbin/route add 10.0.3.128/26 swsao9515
add net 10.0.3.128: gateway swsao9515
/sbin/route add 10.0.7.64/26 swsao9530
add net 10.0.7.64: gateway swsao9530
/sbin/route add 10.0.1.64/26 swsao9506
add net 10.0.1.64: gateway swsao9506
/sbin/route add 10.0.5.128/26 swsao9523
add net 10.0.5.128: gateway swsao9523
/sbin/route add 10.0.1.0/26 swsao9505
add net 10.0.1.0: gateway swsao9505
/sbin/route add 10.0.6.64/26 swsao9526
add net 10.0.6.64: gateway swsao9526
/sbin/route add 10.0.3.64/26 swsao9514
add net 10.0.3.64: gateway swsao9514
/sbin/route add 10.0.4.128/26 swsao9519
add net 10.0.4.128: gateway swsao9519
/sbin/route add 10.0.7.0/26 swsao9529
add net 10.0.7.0: gateway swsao9529
/sbin/route add 10.0.0.64/26 swsao9502
add net 10.0.0.64: gateway swsao9502
/sbin/route add 10.0.6.192/26 swsao9528
add net 10.0.6.192: gateway swsao9528
/sbin/route add 10.0.3.0/26 swsao9513
add net 10.0.3.0: gateway swsao9513
/sbin/route add 10.0.1.128/26 swsao9507
add net 10.0.1.128: gateway swsao9507
/sbin/route add 10.0.2.64/26 swsao9510
add net 10.0.2.64: gateway swsao9510
/sbin/route add 10.0.0.0/26 swsao9501
add net 10.0.0.0: gateway swsao9501
/sbin/route add 10.0.2.192/26 swsao9512
sbin/route add 10.0.5.0/26 swsao9521
add net 10.0.5.0: gateway swsao9521
/sbin/route add 10.0.1.192/26 swsao9508
add net 10.0.1.192: gateway swsao9508


On teh Modelnet Inet topology with 32 landmarks
-----------------------------------------------

config= 0 , 50%= 0.173000397082069 , 90%= 0.608000395351769
config= 14 , 50%= 0.168000012996111 , 90%= 0.634000012935447
config= 8 , 50%= 0.175000258000512 , 90%= 0.651000256770277
config= 7 , 50%= 0.171000335478165 , 90%= 0.65200033386175
config= 4 , 50%= 0.171000119210421 , 90%= 0.658000118628872
config= 1 , 50%= 0.17700003237344 , 90%= 0.660000032216799
config= 19 , 50%= 0.175000191920143 , 90%= 0.660000190987698
config= 13 , 50%= 0.174000709277628 , 90%= 0.660000705824531
config= 10 , 50%= 0.176000650623402 , 90%= 0.662000647455797
config= 17 , 50%= 0.178000635881688 , 90%= 0.668000632760312
config= 16 , 50%= 0.170000050686912 , 90%= 0.67200005043203
config= 11 , 50%= 0.177000138315591 , 90%= 0.674000137626944
config= 5 , 50%= 0.181001738213063 , 90%= 0.688001729384343
config= 9 , 50%= 0.176003646766632 , 90%= 0.703003627514288
config= 2 , 50%= 0.18200002248297 , 90%= 0.716000022362692
config= 12 , 50%= 0.176000457196682 , 90%= 0.724000454686827
config= 3 , 50%= 0.186000530207658 , 90%= 0.724000527349825
config= 20 , 50%= 0.181000228858471 , 90%= 0.727000227606638
config= 6 , 50%= 0.178000517633186 , 90%= 0.76700051457889
config= 18 , 50%= 0.189000895151047 , 90%= 0.790000889761002
config= 15 , 50%= 0.190000029935552 , 90%= 0.802000029751998

On the Modelnet Inet topology with 16 landmarks
-----------------------------------------------

config= 5 , 50%= 0.191000813956706 , 90%= 0.726000809593704
config= 6 , 50%= 0.202000520108028 , 90%= 0.731000517351087
config= 24 , 50%= 0.207000755507108 , 90%= 0.737000751494615
config= 14 , 50%= 0.181000270604058 , 90%= 0.74900026906424
config= 20 , 50%= 0.208001250912071 , 90%= 0.754001244067855
config= 18 , 50%= 0.187001021566086 , 90%= 0.75900101571178
config= 2 , 50%= 0.176000107724415 , 90%= 0.774000107079087
config= 19 , 50%= 0.191000832727282 , 90%= 0.784000827779759
config= 1 , 50%= 0.203000013493059 , 90%= 0.7870000134141
config= 3 , 50%= 0.201000049376836 , 90%= 0.79000004908542
config= 7 , 50%= 0.204000021401107 , 90%= 0.794000021274582
config= 21 , 50%= 0.202000325263441 , 90%= 0.796000323327466
config= 11 , 50%= 0.210000574268155 , 90%= 0.806000570838314
config= 17 , 50%= 0.199000814653027 , 90%= 0.806000809698223
config= 9 , 50%= 0.221000208838433 , 90%= 0.823000207578441
config= 13 , 50%= 0.205000183999774 , 90%= 0.827000182852945
config= 15 , 50%= 0.210000769422978 , 90%= 0.84500076452686
config= 8 , 50%= 0.214000953028182 , 90%= 0.872000946743808
config= 22 , 50%= 0.210000295235878 , 90%= 0.882000293247718
config= 12 , 50%= 0.214000377070199 , 90%= 0.891000374511959
config= 16 , 50%= 0.215002395038498 , 90%= 0.897002378669141
