<project name="testant" default="compile" basedir="../">

  <property name="src_dir" value="src" /> 
  <property name="wire_src_dir" value="src/rice/pastry/wire" /> 
  <property name="build_dir" value="classes" />  
  <property name="lib_dir" value="lib" />
  <property name="ant_dir" value="ant" />
  <property name="ant_lib_dir" value="${ant_dir}/lib" />
  <property name="docs_dir" value="docs" />
  <property name="javadoc_dir" value="${docs_dir}/javadoc" />
  <property name="rmic_includes_files_text" value="${build_dir}/rice/pastry/rmi/RMIRemoteNodeI.class" />
  <property name="exclude_files_text" value="rice/past/search/** 
                                             rice/ap3/** 
                                             rice/nls/** 
                                             rice/rm/testing/**
                                             rice/im/**
                                             rice/bscribe/** 
                                             rice/storage/** 
                                             rice/caching/** 
                                             rice/email/test/** 
                                             rice/testharness/**
                                             rice/splitstream/testing/**
                                             rice/splitstream2/testing/**" />

  <target name="init">   
    <rmic  base="${build_dir}"
           classpath="${classpath_text}" 
           includes="${rmic_includes_files_text}"
           excludes="${exclude_files_text}" />   
    <mkdir dir="${build_dir}" />
    
    <path id="classpath">
      <fileset dir="${lib_dir}">
        <include name="*.jar" />
      </fileset>
      <pathelement path="${built_dir}" />
    </path>

    <pathconvert refid="classpath"
                 property="classpath_text"
                 pathsep="${path.separator}" />
                 
  </target>
  
  <target name="imap-parser" depends="init">
    <antlr target="${src_dir}/rice/email/proxy/imap/parser/antlr/lexer.g" />
    <antlr target="${src_dir}/rice/email/proxy/imap/parser/antlr/grammer.g" />
  </target>
  
  <target name="compile" depends="init,imap-parser"> 
    <javac srcdir="${src_dir}" 
           destdir="${build_dir}"
           classpath="${classpath_text}" 
           excludes="${exclude_files_text}" 
           deprecation="yes" />
  </target> 
  
  <target name="copyright">
    <taskdef name="append" classname="Append" classpath="${ant_lib_dir}" />
    <append srcfile="${ant_dir}/copyright.txt">
      <fileset dir="${src_dir}">
        <include name="**/*.java" />
      </fileset>
    </append>
  </target>

  <target name="beautifywire" depends="init">
    <taskdef name="pretty" classname="org.acm.seguin.ant.Pretty" classpath="${ant_lib_dir}/jrefactory.jar:${ant_lib_dir}/JRefactoryModule.jar:${ant_lib_dir}/JavaStyle.jar" />
    <pretty settingsDir="${ant_dir}" cvs="true">      
      <fileset dir="${wire_src_dir}" includes="**/*.java" excludes="${exclude_files_text}" />
    </pretty>      
  </target>

  <target name="beautify" depends="init">
    <taskdef name="pretty" classname="org.acm.seguin.ant.Pretty" classpath="${ant_lib_dir}/jrefactory.jar:${ant_lib_dir}/JRefactoryModule.jar:${ant_lib_dir}/JavaStyle.jar" />
    <pretty settingsDir="${ant_dir}" cvs="true">      
      <fileset dir="${src_dir}" includes="**/*.java" excludes="${exclude_files_text}" />
    </pretty>  
  </target> 

  <target name="jar" depends="compile">   
    <jar destfile="${build_dir}/pastry.jar">
      <fileset dir="${build_dir}" includes="**/*.class" excludes="${exclude_files_text}" />
    </jar>
  </target>
        
  <target name="javadoc" depends="init">
    <javadoc destdir="${javadoc_dir}"
             classpath="${classpath_text}" 
             windowtitle="Rice Pastry - API Specifications"
             use="true">
       <fileset dir="${src_dir}" includes="**/*.java" excludes="${exclude_files_text}" />
       <doctitle>Rice Pastry API</doctitle>
       <header>Rice Pastry API</header>
       <bottom><![CDATA[<i>Copyright &#169; 2001 - Rice Pastry.</i>]]></bottom>
    </javadoc>
  </target>
  
</project>
